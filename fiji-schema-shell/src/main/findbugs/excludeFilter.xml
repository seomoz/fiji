<?xml version="1.0"?>
<!--
    (c) Copyright 2013 WibiData, Inc.

    See the NOTICE file distributed with this work for additional
    information regarding copyright ownership.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.
-->
<FindBugsFilter>
  <!--
    Bugs we don't care about globally.
  -->
  <Match>
    <!-- We never use Java Serialization, so ignore any Serializable findbugs warnings. -->
    <Bug pattern="SE_COMPARATOR_SHOULD_BE_SERIALIZABLE" />
  </Match>
  <Match>
    <!-- Redundant comparison of to null for asserts is perfectly okay and adds to readability. -->
    <Bug pattern="RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE" />
  </Match>
  <Match>
    <!-- Redundant comparison of to null for asserts is perfectly okay and adds to readability. -->
    <Bug pattern="RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE" />
  </Match>
  <Match>
    <!--
      Many non-transient non-serializable fields are generated by scala and
      should not be checked by findbugs.
    -->
    <Bug pattern="SE_BAD_FIELD" />
  </Match>
  <Match>
    <!-- Scala generates many redundant interface declarations. -->
    <Bug pattern="RI_REDUNDANT_INTERFACES" />
  </Match>
  <Match>
    <!-- Scala generates methods named after classes in match statements, etc. These
         have capital first letters, which trips up findbugs. -->
    <Bug pattern="NM_METHOD_NAMING_CONVENTION" />
  </Match>
  <Match>
    <!-- Scala generates inner classes named $class; ignore bugs in their definitions. -->
    <Class name="~.*\$class" />
  </Match>
  <Match>
    <!-- Scala generates writes to the static field 'MODULE$' from instance methods. -->
    <Bug pattern="ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD" />
    <Field name="~.*MODULE\$" />
  </Match>
  <Match>
    <!-- Scala represents some fields as private methods and findbugs does not detect
         their use accurately.
    -->
    <Bug pattern="UPM_UNCALLED_PRIVATE_METHOD" />
  </Match>
  <Match>
    <!-- Scala's auto-generated reflection / rtti code may return null values internally. -->
    <Bug pattern="NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE" />
    <Method name="~.*reflMethod.*" />
  </Match>

  <!-- one-off bugs to suppress -->
  <Match>
    <!-- The class (Enum) this inherits from is Serializable, but we never use that framework. -->
    <Class name="com.moz.fiji.schema.shell.ddl.CompressionTypeToken$" />
    <Bug pattern="SE_NO_SERIALVERSIONID" />
  </Match>
  <Match>
    <!-- The class (Enum) this inherits from is Serializable, but we never use that framework. -->
    <Class name="com.moz.fiji.schema.shell.ddl.LocalityGroupPropName$" />
    <Bug pattern="SE_NO_SERIALVERSIONID" />
  </Match>
  <Match>
    <!-- The class (Enum) this inherits from is Serializable, but we never use that framework. -->
    <Class name="com.moz.fiji.schema.shell.ddl.key.RowKeyElemType$" />
    <Bug pattern="SE_NO_SERIALVERSIONID" />
  </Match>
  <Match>
    <!-- Scala-generated anonymous functions have a high incidence of false-positive nulls. -->
    <!-- Believed false-positive due to scala-generated anon fn. -->
    <Class name="~org[.]fiji[.]schema[.]shell[.].*\$\$anonfun.*" />
    <Bug pattern="NP_LOAD_OF_KNOWN_NULL_VALUE" />
  </Match>
</FindBugsFilter>
