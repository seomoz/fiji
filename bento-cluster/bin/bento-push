#!/usr/bin/env bash
# -*- coding: utf-8 -*-
# -*- mode: shell -*-

# (c) Copyright 2014 WibiData, Inc.
#
# See the NOTICE file distributed with this work for additional
# information regarding copyright ownership.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Build and push bento docker images to docker hub.
#
# USAGE
#
#   bento-push
#
# ------------------------------------------------------------------------------

set -o nounset   # Fail when referencing undefined variables
set -o errexit   # Script exits on the first error
set -o pipefail  # Pipeline status failure if any command fails
if [[ ! -z "${DEBUG:-}" ]]; then
  source=$(basename "${BASH_SOURCE}")
  PS4="# ${source}":'${LINENO}: '
  set -x
fi

# ------------------------------------------------------------------------------

# Canonicalize a path into an absolute, symlink free path.
#
# Portable implementation of the GNU coreutils "readlink -f path".
# The '-f' option of readlink does not exist on MacOS, for instance.
#
# Args:
#   param $1: path to canonicalize.
# Stdout:
#   Prints the canonicalized path on stdout.
function resolve_symlink() {
  local target_file=$1

  if [[ -z "${target_file}" ]]; then
    echo ""
    return 0
  fi

  cd "$(dirname "${target_file}")"
  target_file=$(basename "${target_file}")

  # Iterate down a (possible) chain of symlinks
  local count=0
  while [[ -L "${target_file}" ]]; do
    if [[ "${count}" -gt 1000 ]]; then
      # Just stop here, we've hit 1,000 recursive symlinks. (cycle?)
      break
    fi

    target_file=$(readlink "${target_file}")
    cd $(dirname "${target_file}")
    target_file=$(basename "${target_file}")
    count=$(( ${count} + 1 ))
  done

  # Compute the canonicalized name by finding the physical path
  # for the directory we're in and appending the target file.
  local phys_dir=$(pwd -P)
  echo "${phys_dir}/${target_file}"
}

# ------------------------------------------------------------------------------

bento_bin_path="${BASH_SOURCE:-$0}"
bento_bin_path=$(resolve_symlink "${bento_bin_path}")

BENTO_CLUSTER_HOME=$(dirname "$(dirname "${bento_bin_path}")")
BENTO_CLUSTER_HOME=$(cd "${BENTO_CLUSTER_HOME}"; pwd -P)

# ------------------------------------------------------------------------------
# Script main begins here:

# Locate the Docker binary:
# Ubuntu installs the docker binary as docker.io to avoid a conflict with another package:
if docker=$(which "docker.io"); then :
elif docker=$(which "docker"); then :
else
  echo "Docker command-line tool not found : please install Docker."
  exit 1
fi

# Ensure that Docker version is not less than 1.0.0.
docker_version=$($docker version | head -1 | cut -f 3 -d " ")
if [[ ${docker_version} < 1.0.0 ]] ; then
  echo "Docker version should be 1.0.0 or above. Found version $docker_version." 1>&2
  exit 1
fi

$docker build -t "fijiproject/bento-cluster-base:cdh5" ${BENTO_CLUSTER_HOME}/docker-cdh5-base

$docker build -t "fijiproject/bento-cluster:cdh5" ${BENTO_CLUSTER_HOME}/docker-cdh5
$docker build -t "fijiproject/bento-cluster:cdh5.1.0" ${BENTO_CLUSTER_HOME}/docker-cdh5.1.0
$docker build -t "fijiproject/bento-cluster:cdh5.1.2" ${BENTO_CLUSTER_HOME}/docker-cdh5.1.2
$docker build -t "fijiproject/bento-cluster:cdh5.1.3" ${BENTO_CLUSTER_HOME}/docker-cdh5.1.3
$docker build -t "fijiproject/bento-cluster:cdh5.2.1" ${BENTO_CLUSTER_HOME}/docker-cdh5.2.1
$docker build -t "fijiproject/bento-cluster:cdh5.3.0" ${BENTO_CLUSTER_HOME}/docker-cdh5.3.0

$docker push fijiproject/bento-cluster:cdh5
$docker push fijiproject/bento-cluster:cdh5.1.0
$docker push fijiproject/bento-cluster:cdh5.1.2
$docker push fijiproject/bento-cluster:cdh5.1.3
$docker push fijiproject/bento-cluster:cdh5.2.1
$docker push fijiproject/bento-cluster:cdh5.3.0
